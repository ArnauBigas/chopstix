#!/usr/bin/env sh
#
# ----------------------------------------------------------------------------
#
# Copyright 2019 IBM Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# ----------------------------------------------------------------------------
#

die() { echo "$*" >&2 ; exit 1 ; }

set -eu

usage() {
    echo "Usage: cxprocess -i <id> -o <out> -t <trace>"
    echo "Options:"
    echo "  -h,--help     Display this help and exit"
    echo "  -i,--id       Trace identifier"
    # echo "  -o,--output   Output state file"
    echo "  -t,--trace    Path to trace directory"
    exit 0;
}

id=
output=
trace=$PWD

TEMP=`getopt -o 'hi:o:t:' -l 'help,id:,output:,trace:' -n 'cxprocess' -- "$@"`

eval set -- "$TEMP"

while true ; do
    case "$1" in
        -h|--help) usage; shift;;
        -i|--id) id=$2; shift 2;;
        -o|--output) output=$2; shift 2;;
        -t|--trace) trace=$2; shift 2;;
        --) shift; break ;;
        *) echo "Internal error!"; exit 1;;
    esac
done

[ -z "$id" ] && die "No id set"

cd $trace

[ -f maps.$id ] || die "No trace with id $id"

pagesize=4096

memdump() {
    addr=$(printf "%d" 0x$1)
    data=$2
    xxd -p -c $pagesize $data | while read page ; do
        printf "M 0x%x $page\n" $addr
        (( addr += pagesize ))
    done
}

# Process registers
# awk '
# $1 ~ /^R([0-9]*)$/ { print "R","G"$1,"0x"$2; }
# $1 ~ /^F([0-9]*)$/ { print "R","FPR"substr($1,2),"0x"$2; }
# $1 ~ /^V([0-9]*)/ { gsub(/[A-Z_]/,"",$1); print "R", "VR"$1,"0x"$2; }
# ' regs.$id

while read line ; do
    echo "R $line"
done < regs.$id

# Process memory

for page in $(ls page.$id.* 2>/dev/null) ; do
    page_addr=$(echo $page | cut -f3 -d.)
    memdump $page_addr $page
done
